Title: Staticky: My Static Site Generator
Date: 2014-08-02
---
<p>
	These last few weeks I went through a full site re-design, in the process making my own site generator called <a href="https://github.com/tylerkrupicka/staticky">Staticky</a> to propagate all the new site layouts. I wanted it to have all of the core features of Jekyll/Octopress, but make creating a site and customization much easier.
</p>

<!-- more -->

<img id="postimg" src="http://tylerkrupicka.com/images/staticky/loadposts.jpg" alt="load posts">

<h2>Custom Variables</h2>
<p>
	One of the main functions I wanted in the generator was the ability to create custom variables. To achieve this, I wrote a script in my python generator that automatically takes all the variables in the configuration file and replaces any bracketed key in the layouts. For example if I have a line "email_address: abc@gmail.com" in the configuration file, then all instances of [[email_address]] in the layout will be replaced with abc@gmail.com. This makes it easy to turn any site element in to a variable that only needs to be changed once to apply everywhere.
</p>

<h2>Layouts</h2>
<p>
	Another feature of the generator is the ability to create the site from standard html layout files. The generator uses each layout as a template when creating the final index, all posts, and post pages. Having plain html templates and css styling simplifies the editing process for each page.
</p>

<h2>Simple Setup</h2>
<p>
	Another advantage of the generator is the simple setup and use. Staticky is a single python file that can be run (without use of a terminal) on any system with python. Just drop staticky.py and appropriate directories in to a folder and it is ready to go.

</p>

<h2>Default Theme</h2>
<p>
	In addition to creating the generator, I also created a default theme for when Staticky is first downloaded. The default theme is a functioning generated site, that serves as a tutorial on how to get started with variables and layouts.
</p>

<h2>Going Forward</h2>
<p>
	There are some modifications and improvements that would be useful to add to the generator over time, to make it useful for a wider range of site layouts. I'd like to add functionality to create new pages from templates, let the generator propagate any amount of custom layouts, create a folder setup script, and further compartmentalize site elements like navigation bars and footers.
</p>

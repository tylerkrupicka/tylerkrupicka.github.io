<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tyler Krupicka]]></title>
  <link href="http://tylerkrupicka.com/atom.xml" rel="self"/>
  <link href="http://tylerkrupicka.com/"/>
  <updated>2014-07-10T18:55:26-07:00</updated>
  <id>http://tylerkrupicka.com/</id>
  <author>
    <name><![CDATA[Tyler Krupicka]]></name>
    <email><![CDATA[tyler.krupicka13@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fixing the Samsung Galaxy]]></title>
    <link href="http://tylerkrupicka.com/blog/2014/07/02/fixing-the-samsung-galaxy/"/>
    <updated>2014-07-02T15:19:27-07:00</updated>
    <id>http://tylerkrupicka.com/blog/2014/07/02/fixing-the-samsung-galaxy</id>
    <content type="html"><![CDATA[<p>
    I&#8217;ve had a Samsung Galaxy S4 smartphone for a year now and it&#8217;s a good phone. However, the software that Samsung has put on top of stock android can be really awful in places and I&#8217;ve spent lots of time finding fixes. My phone runs the stock KitKat launcher, uses stock Google service apps, does all of its media from Google Play, and uses the stock Google camera app. These apps not only look much better visually, but provide a much better service than anything Samsung produces. Here&#8217;s how to set up these fixes on any device running Android KitKat or newer.
</p>


<!-- more -->


<p><img class="postimg" src="http://tylerkrupicka.com/assets/kitkat/kitkat.jpg" alt="kitkat"></p>

<h2>Google Now Launcher</h2>


<p>
    Touchwiz (the Samsung touch interface) manages to be one of the most feature rich skins of Android, without being particularly useful or visually appealing. Meanwhile, Google did a great job with the latest KitKat Launcher: Google Now integration, voice search, transparencies, and a clean UI. I&#8217;ve found the stock Google launcher to be a much better Android experience, and it is possible to get it on any KitKat phone. 
</p>




<p>
    1. <b>Google Search</b>: Make sure you have the <a href="https://play.google.com/store/apps/details?id=com.google.android.googlequicksearchbox&hl=en">Google Search</a> app. It contains the KitKat Launcher.<br /><br />

    2. <b>Launcher APK</b>: Download <a href="http://tylerkrupicka.com/assets/kitkat/kitkatlauncher.apk" download>this</a> apk and install it to allow you to use Google Search as your launcher.<br /><br />

    3. <b>Setup</b>: Press the home button and set &#8220;Launcher&#8221; as the default launcher. That&#8217;s it.<br /><br />

</p>




<h2>Apps</h2>


<p>
    1. <b>Camera</b>: The Google Camera app is much better than the stock Samsung one (at least for photos). Get it <a href="https://play.google.com/store/apps/details?id=com.google.android.GoogleCamera&hl=en">here</a>.<br /><br />

    2. <b>Messaging</b>: Google Hangouts is a much cleaner messaging app, which allows merged conversations between your Google account and sms. Get it <a href="https://play.google.com/store/apps/details?id=com.google.android.talk&hl=en">here</a>.<br /><br />

    3. <b>Calendar</b>: Plain Google calendar app. Found <a href="https://play.google.com/store/apps/details?id=com.google.android.calendar&hl=en">here</a>.<br /><br />

    4. <b>Music</b>: Google Play Music is a really convenient service for managing and playing music. Download <a href="https://support.google.com/googleplay/answer/1229970?hl=en">Google Music Manager</a> on your computer to upload songs to your account, then get the <a href="https://play.google.com/store/apps/details?id=com.google.android.music&hl=en">app</a> to listen to your library. You can change how your account stores music (so you don&#8217;t use data) in the settings tab of the app. This includes storing music on the SD card.<br /><br />

    5. <b>Lock Screen</b>: I like having all of my notifications displayed while still having a phone lock. So far <a href="https://play.google.com/store/apps/details?id=com.slidelock&hl=en">SlideLock</a> is the best lock screen add on I&#8217;ve used, although it can be slow for a while when you first use it.<br /><br />

    6. <b>Keyboard</b>: Swiftkey combines customizable themes, swiping, and adaptive auto correct to make typing much easier. Get it <a href="https://play.google.com/store/apps/details?id=com.touchtype.swiftkey&hl=en">here</a>.<br /><br />

</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Artificial Intelligence for Gobblet]]></title>
    <link href="http://tylerkrupicka.com/blog/2014/06/26/artificial-intelligence-for-gobblet/"/>
    <updated>2014-06-26T21:33:46-07:00</updated>
    <id>http://tylerkrupicka.com/blog/2014/06/26/artificial-intelligence-for-gobblet</id>
    <content type="html"><![CDATA[<p>Recently I had the opportunity to design an AI to play the board game &#8220;Gobblet&#8221; for a team-based class project. At the end of the project all of the AIs entered in to a tournament against each other to determine which strategies were the most effective. My team&#8217;s AI ended up making it to the department finals; performing well against a variety of Gobblet strategies. Here I&#8217;m going to explain the basis of how our AI player was designed.</p>


<!-- more -->


<p><img class="postimg" src="http://tylerkrupicka.com/assets/gobblet/gobblettournament.png" alt="AI Tournament"></p>

<h2>Rules of Gobblet</h2>


<p>To begin with I&#8217;ll explain the basic rules of Gobblet. The game is played on a 4X4 grid using stackable cups in four sizes (ranging 1-4). Players take turns placing cups from their stacks on the board, trying to create a line of four of their pieces in a row. However, players also have the option of covering up cups of smaller sizes on the board when moving. This creates an interesting gameplay where covering up the other player&#8217;s pieces can be more useful than placing in a free space. A more detailed set of rules can be found <a href="http://www.educationallearninggames.com/how-to-play-gobblet-game-rules.asp">here</a>.</p>




<h2>Design of an AI</h2>


<p>Creating an AI for a board game is basically like creating a system of ranking moves. Each turn your program has to look at the current state of the board and in some way or another determine what possible move is best. First, our AI would take the current state of the board and generate every possible move we could make from it. Then it would determine which of the generated moves were valid and rank them to find the most ideal one.</p>




<h2>Our Strategy</h2>




<p>The strategy we ended up using didn&#8217;t end up looking in to future moves, or searching for complicated strategies. Instead it focused on creating a progression of board states that creates a win. In order to avoid revealing too much of our solution (for potential students who may have the same project) I won&#8217;t go in to detail. Quite simply, we defined a set of criteria for patterns on the board that lead to a win. Then we broke the pattern down in to stages, and tried to get the AI to create each stage sequentially and create opportunities. A demonstration of a match using the completed AI can be seen below.
</p>


<p><video width='700' height='480' preload='none' controls poster='http://tylerkrupicka.com/assets/gobblet/videoTitle.jpg'><source src='http://tylerkrupicka.com/assets/gobblet/gobblet.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'></video></p>

<h2>Shortcomings</h2>


<p>
    The strategy we chose works well for basic gameplay and setting up useful situations, but it far from perfect. Most notably, the AI doesn&#8217;t adapt to opposing playing styles &#8211; instead focusing on forming set situations. Additionally, it often followed the same pattern each time it played another AI (no randomness). There&#8217;s plenty of different scenarios to think about when designing these programs. 
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started: About This Site]]></title>
    <link href="http://tylerkrupicka.com/blog/2014/06/21/getting-started-about-this-site/"/>
    <updated>2014-06-21T12:48:04-07:00</updated>
    <id>http://tylerkrupicka.com/blog/2014/06/21/getting-started-about-this-site</id>
    <content type="html"><![CDATA[<p>The last few weeks I&#8217;ve been working on developing this website as a place to post projects and thoughts as well as get more experience with web development. It&#8217;s finally at a point where I&#8217;m content with the styling and layout (for the moment) so I thought it would be good to post some of what I&#8217;ve learned so far.</p>


<!-- more -->


<p>When I originally planned on developing a site a year ago, I was daunted with the task of creating one from scratch. I didn&#8217;t want to use a pre-built platform, because you lose a lot of control of the site and can&#8217;t learn anything from it. This site is generated by <a href="http://octopress.org">Octopress</a>, a static site generator that adds features to <a href="http://jekyllrb.com/">Jekyll</a>. Websites built using Octopress/Jekyll are generated locally, meaning that the site is assembled each time a change is made. This avoids the problem of having to work with databases and allows me to have full control over the appearance of the site.</p>


<p>Another bonus to having a static site is the ability to use git for version control and Github Pages for free hosting. Each time I want to update the site, I commit the most recent changes to the site&#8217;s repository on Github and the site is hosted from there. This system makes it really easy to maintain the site and keeps the cost of running it down. Additionally, I can still use my own domain name when accessing the site.</p>


<p>In summary, Octopress makes creating a static site really simple, while holding on to the customization that I want. Nice!</p>



]]></content>
  </entry>
  
</feed>
